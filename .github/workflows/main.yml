name: Build

on:
  push:
    branches: [ master, ci_build ]

jobs:
  #  build:
  #    runs-on: ubuntu-latest
  #
  #    steps:
  #      - uses: actions/checkout@v2
  #
  #      - uses: actions/setup-node@v2
  #        with:
  #          node-version: '16.13'
  #
  #      - run: yarn install
  #      - run: yarn tsc
  #
  #      - run: cp docker/{Dockerfile,run.sh} .
  #
  #      - uses: docker/setup-buildx-action@v1
  #
  #      - name: build image
  #        run: docker build . --tag ghcr.io/ncla/setlisty:pre-release
  #
  #      - name: docker login
  #        run: docker login ghcr.io -u $GITHUB_ACTOR -p $GITHUB_TOKEN
  #        env:
  #          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  #
  #      - name: push image
  #        run: docker push ghcr.io/ncla/setlisty:pre-release
  #
  test:
    runs-on: ubuntu-latest
    # needs: [ build ]

    steps:
      - uses: actions/checkout@v2

      - name: docker login
        run: docker login ghcr.io -u $GITHUB_ACTOR -p $GITHUB_TOKEN
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: start MySQL database
        run: docker run -d -p 3306:3306 --name mysql -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=setlisty --health-cmd="mysqladmin ping" --health-interval=1s --health-timeout=1s --health-retries=30 mysql:8.0.23 mysqld --default-authentication-plugin=mysql_native_password

      - name: wait for MySQL to become healthy
        run: until [ "`docker inspect -f {{.State.Health.Status}} mysql`" -eq "healthy" ]; do; sleep 0.1; done;

      - name: run migrations
        run: docker run --env-file ./.env.example -e DB_HOST=127.0.0.1 -e DB_PASSWORD=root --network="host" --rm ghcr.io/ncla/setlisty:pre-release migrate

#  deploy:
#    needs: [ build, test ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: docker login
#        run: docker login ghcr.io -u $GITHUB_ACTOR -p $GITHUB_TOKEN
#        env:
#          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
#
#      - name: tag latest image
#        run: docker tag ghcr.io/ncla/setlisty:pre-release ghcr.io/ncla/setlisty:latest
#
#      - name: push image
#        run: docker push ghcr.io/ncla/setlisty:latest
#
#      - name: execute update command on server
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          port: ${{ secrets.PORT }}
#          username: ${{ secrets.USERNAME }}
#          key: ${{ secrets.KEY }}
#          script: cd /opt/setlisty && sh update.sh